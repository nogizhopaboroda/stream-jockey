{
  "name": "Streamjockey",
  "tagline": "Media streaming services orchestration for OSX",
  "body": "# stream jockey\r\n\r\n[Work in progress]\r\n\r\nStream Jockey provides you a way to control media streaming services (like soundcloud, mixcloud, youtube, etc) in browser. Right in the existing instance of your browser where you read this message.\r\n\r\n## Requirements\r\n\r\n- Os: Mac OS\r\n- Browser: Chrome or Safari\r\n- ***If node version >= 4 : XCode 7***\r\n\r\n## Installation\r\n```shell\r\nnpm install -g streamjockey\r\n```\r\nor\r\n```shell\r\ngit clone git@github.com:nogizhopaboroda/streamjockey.git\r\ncd streamjockey\r\nnpm install\r\n```\r\n\r\nThen run the application\r\n```shell\r\nstreamjockey\r\n```\r\nor in case you've chosen variant with cloning repository\r\n```shell\r\nnode index.js\r\n```\r\n\r\nthen go to the demo page http://nogizhopaboroda.github.io/streamjockey#demo\r\n\r\nto make sure that application works well\r\n\r\n## Usage\r\n\r\n***\r\n```shell\r\nstreamjockey -h\r\n\r\n      Usage: streamjockey [rcfile]\r\n      Options:\r\n        -h, --help            output usage information\r\n        -v, --version         output the version number\r\n```\r\n***\r\n\r\n## Run as a daemon:\r\n\r\n***\r\n```shell\r\nstreamjockey > /dev/null &; disown\r\n```\r\n***\r\n\r\n## RC file\r\n***\r\nRC file should be a valid nodejs module and consist of key-value pairs \r\n\r\nwhere key is **url matcher** and value contains at least this 3 functions: **play**, **pause**, **is_playing**\r\n\r\noptionally there might be functions **prev** and **next**\r\n\r\n***\r\n\r\nafter installation application saves default RC file here: `~/.sjrc.js` with snippets for page\r\nhttp://nogizhopaboroda.github.io/streamjockey#demo\r\n\r\ncheck it out to get into\r\n\r\n***\r\n\r\nall the functions should be javascript snippets that can be executable on target page, e.g.:\r\n```js\r\ndocument.querySelector('<play button selector>').click();\r\n//or\r\nwindow.AudioPlayerInstance.play();\r\n```\r\n\r\nyou can test them right in browser console on target page\r\n\r\n**play**: plays media\r\n\r\n**pause**: stops/pauses media\r\n\r\n**is_playing**: should return `true` if media is playing and `false` or anything else if not\r\n\r\n**next**: next media source\r\n\r\n**prev**: previous media source\r\n\r\nExample:\r\n```js\r\nmodule.exports = {\r\n  \"<url_matcher>\": { //e.g.: \"nogizhopaboroda.github.io/streamjockey\"\r\n    /* required functions */\r\n    \"play\": function(){\r\n      document.querySelector('<play button selector>').click();\r\n      return 'play'; //return is optional\r\n    },\r\n    \"pause\": function(){\r\n      document.querySelector('<pause button selector>').click();\r\n      return 'pause';\r\n    },\r\n    \"is_playing\": function(){\r\n      //return is required\r\n      return document.querySelector('<play/pause button selector>').classList.contains('playing');\r\n    },\r\n    /* optional functions */\r\n    \"next\": function(){\r\n      document.querySelector('<next button selector>').click();\r\n    },\r\n    \"prev\": function(){\r\n      document.querySelector('<prev button selector>').click();\r\n    },\r\n  }\r\n}\r\n```\r\n\r\n***\r\n\r\nAs long as RC file is node module, you can require one module from another, e.g.:\r\n```js\r\n// ~/.sjrc.js\r\nmodule.exports = require('./.dotfiles/sjrc.js');\r\n```\r\n\r\n***\r\n\r\nThere might be more than one target sites. Streamjockey handles it well\r\n\r\n***\r\n\r\nJust check out the demo if you still didn't do so. It can tell much more than text here\r\n\r\n## How it works\r\nApplication uses native binding for mediakeys interception (https://github.com/tcr/mediakeys) and executes js code in browser using applescript.\r\nThat's why there is no Firefox support - it's not scriptable.\r\n\r\n## Bugs/Issues/Feature requests\r\nCreate new issue [here](https://github.com/nogizhopaboroda/streamjockey/issues)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}